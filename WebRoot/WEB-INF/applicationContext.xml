<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://localhost/whyc" />
		<property name="user" value="root" />
		<property name="password" value="4382030" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="configLocation" value="classpath:hibernate.cfg.xml">
		</property>
		<property name="dataSource">
			<ref bean="dataSource"></ref>
		</property>
	</bean>

	<!--万恶的分割线。以下是DAO -->
	<bean id="iwDao" class="com.ycx.dao.impl.IndiWarnDaoImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="indiDao" class="com.ycx.indicator.dao.IndicatorDaoImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="kindDao" class="com.ycx.dao.impl.KindDaoImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="wcDao" class="com.ycx.warncontent.dao.WarncontentDaoImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="wlDao" class="com.ycx.warnlevel.dao.WarnlevelDaoImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="wstdDao" class="com.ycx.warnstodo.dao.WarnstodoDaoImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="wtdDao" class="com.ycx.warntodo.dao.WarntodoDaoImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="wDao" class="com.ycx.work.dao.WorkDaoImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="uDao" class="com.ycx.reglog.dao.UserDaoImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="matchDao" class="com.ycx.dao.impl.MatchDaoImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<!--万恶的分割线。以下是 service 。用来实例化对象。 -->
	<bean id="indiService" class="com.ycx.indicator.service.IndicatorServiceImpl">
		<property name="indiDao" ref="indiDao" />
		<property name="kindDao" ref="kindDao" />
		<property name="matchDao" ref="matchDao" />
		<property name="iwDao" ref="iwDao" />
		<property name="wDao" ref="wDao" />
	</bean>
	<bean id="wcService" class="com.ycx.warncontent.service.WarncontentServiceImpl">
		<property name="wcDao" ref="wcDao" />
		<property name="wlDao" ref="wlDao" />
		<property name="iwDao" ref="iwDao" />
	</bean>
	<bean id="workService" class="com.ycx.work.service.WorkServiceImpl">
		<property name="wDao" ref="wDao" />
		<property name="wcDao" ref="wcDao" />
		<property name="wtdDao" ref="wtdDao" />
		<property name="iwDao" ref="iwDao" />
		<property name="wlDao" ref="wlDao" />
	</bean>
	<bean id="wtdService" class="com.ycx.warntodo.service.WarntodoServiceImpl">
		<property name="wtdDao" ref="wtdDao" />
		<property name="wcDao" ref="wcDao" />
		<property name="iwDao" ref="iwDao" />
		<property name="wlDao" ref="wlDao" />
	</bean>
	<bean id="wlService" class="com.ycx.warnlevel.service.WarnlevelServiceImpl">
		<property name="wlDao" ref="wlDao" />
	</bean>
	<bean id="userService" class="com.ycx.reglog.service.UserServiceImpl">
		<property name="uDao" ref="uDao" />
	</bean>
	<bean id="hpService" class="com.ycx.homepage.service.HomepageServiceImpl">
		<property name="wlDao" ref="wlDao" />
	</bean>

	<!--万恶的分割线。transaction -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<!-- 事务拦截器bean需要依赖注入一个事务管理器 -->
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<!-- 下面定义事务传播属性 -->
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	<!-- 定义BeanNameAutoProxyCreator -->
	<bean
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<!-- 指定对满足哪些bean name的bean自动生成业务代理 -->
		<property name="beanNames">
			<!-- 下面是所有需要自动创建事务代理的bean -->
			<list>
				<value>indiService</value>
				<value>wcService</value>
				<value>workService</value>
				<value>wtdService</value>
				<value>wlService</value>
				<value>userService</value>
			</list>
			<!-- 此处可增加其他需要自动创建事务代理的bean -->
		</property>
		<!-- 下面定义BeanNameAutoProxyCreator所需的事务拦截器 -->
		<property name="interceptorNames">
			<list>
				<!-- 此处可增加其他新的Interceptor -->
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>
	<!--万恶的分割线。自动更新 -->
	<bean id="checkWDoDate" class="com.ycx.util.schedule.CheckWDoDate">
		<property name="workService">
			<ref bean="workService" />
		</property>
	</bean>
	<bean id="scheduledTask" class="org.springframework.scheduling.timer.ScheduledTimerTask">
		<property name="delay" value="0" />
		<property name="period" value="86400000" />
		<property name="timerTask" ref="checkWDoDate" />
	</bean>
	<bean id="timerfactory" class="org.springframework.scheduling.timer.TimerFactoryBean">
		<property name="scheduledTimerTasks">
			<list>
				<ref bean="scheduledTask" />
			</list>
		</property>
	</bean>
	<!--万恶的分割线。 -->
</beans>